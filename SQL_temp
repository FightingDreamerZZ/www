SELECT * FROM `ew_transaction` WHERE ctime > '2018-01-01' ORDER BY `ew_transaction`.`quantity` ASC;

SELECT DISTINCT user FROM `ew_transaction` WHERE quantity <0 AND time > "2015-01-01" ORDER BY `ew_transaction`.`quantity` ASC

SELECT *, SUM(quantity) FROM `ew_transaction` WHERE quantity <0 AND time > "2015-01-01" GROUP BY user

SELECT * FROM `ew_transaction` WHERE time BETWEEN "2018-01-01" AND "2018-07-01" ORDER BY `ew_transaction`.`barcode` ASC


SELECT * FROM `ew_transaction` WHERE time BETWEEN "2018-01-01" AND "2018-07-01" GROUP BY `ew_transaction`.`barcode`

--zz: add 'application' column to transaction table:
ALTER TABLE `ew_transaction` ADD `application` VARCHAR(20) NULL DEFAULT 'unknown' COMMENT 'Only for parts depart - sold_retail, sold_wholesale, consumed_repair, consumed_assembly, unknown' AFTER `quantity`;

--zz: add 'application' column to cart table:
ALTER TABLE `ew_cart` ADD `application` VARCHAR(20) NULL DEFAULT 'unknown' COMMENT 'Only for parts depart - sold_retail, sold_wholesale, consumed_repair, consumed_assembly, unknown' AFTER `quantity`;

--zz: create view for trans list (with appli this time)
DROP TABLE IF EXISTS `transaction_view_w_appli`;

--zz: add "pending" col for cart table for "remove proceed of cart for non-admin" feature
ALTER TABLE `ew_cart` ADD `pending` VARCHAR(10) NULL DEFAULT 'false' COMMENT 'If need to be approved by admin to proceed. Value - true or false (varchar10).' AFTER `application`;

CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `transaction_view_w_appli`  AS  select
`ew_transaction`.`tid` AS `tid`,
`ew_transaction`.`user` AS `user`,
`ew_transaction`.`barcode` AS `barcode`,
(select `barcode_view`.`name` AS `name` from `barcode_view` where (`ew_transaction`.`barcode` = `barcode_view`.`barcode`)) AS `name`,
`ew_transaction`.`type` AS `type`,
`ew_transaction`.`quantity` AS `quantity`,
`ew_transaction`.`application` AS `application`,
`ew_transaction`.`time` AS `time`
from `ew_transaction` ;

--zz: create view for trans list (with pprice this time)
DROP TABLE IF EXISTS `transaction_view_w_pprice`;

CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `transaction_view_w_pprice`  AS  select
`ew_transaction`.`tid` AS `tid`,
`ew_transaction`.`user` AS `user`,
`ew_transaction`.`barcode` AS `barcode`,
(select `barcode_view`.`name` AS `name` from `barcode_view` where (`ew_transaction`.`barcode` = `barcode_view`.`barcode`)) AS `name`,
(select `ew_part`.`p_price` AS `p_price` from `ew_part` where (`ew_transaction`.`barcode` = `ew_part`.`barcode`)) AS `p_price`,
`ew_transaction`.`type` AS `type`,
`ew_transaction`.`quantity` AS `quantity`,
`ew_transaction`.`application` AS `application`,
`ew_transaction`.`time` AS `time`
from `ew_transaction` ;

SELECT barcode, name, SUM(quantity*p_price) FROM `transaction_view_w_pprice` GROUP BY `barcode`;

SELECT SUM(quantity) FROM `ew_transaction` WHERE `time` BETWEEN '".$new_time_start[$i]."' AND '".$new_time_end[$i]."' AND `type` = 'part' AND `quantity` < '0';

--zz: auth--basic typing
ALTER TABLE `ew_user` CHANGE `type` `type` INT(1) NOT NULL COMMENT '0. admin, 1.superuser, 2.warehouse user, 3.acc user, 4.crm user, 5.warehouse admin';

--zz: auth--changed auth for ooc
UPDATE `ew_user` SET `type` = '5' WHERE `ew_user`.`user` = 'John';
UPDATE `ew_user` SET `type` = '5' WHERE `ew_user`.`user` = 'otto';

--zz: add the column 'organizing201809' for part table to flag if this record is changed during the 201809 organizing operation..
ALTER TABLE `ew_part` ADD `organizing201809` VARCHAR(10) NULL COMMENT 'if is changed during the 201809 organizing operation' AFTER `xsearch`;